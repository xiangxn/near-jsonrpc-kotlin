/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.RuntimeFeesConfigView
import org.openapitools.client.models.ActionCreationConfigView
import org.openapitools.client.models.DataReceiptCreationConfigView
import org.openapitools.client.models.Fee
import org.openapitools.client.models.StorageUsageConfigView

class RuntimeFeesConfigViewTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of RuntimeFeesConfigView
        //val modelInstance = RuntimeFeesConfigView()

        // to test the property `actionCreationConfig` - Describes the cost of creating a certain action, `Action`. Includes all variants.
        should("test actionCreationConfig") {
            // uncomment below to test the property
            //modelInstance.actionCreationConfig shouldBe ("TODO")
        }

        // to test the property `actionReceiptCreationConfig` - Describes the cost of creating an action receipt, `ActionReceipt`, excluding the actual cost of actions. - `send` cost is burned when a receipt is created using `promise_create` or     `promise_batch_create` - `exec` cost is burned when the receipt is being executed.
        should("test actionReceiptCreationConfig") {
            // uncomment below to test the property
            //modelInstance.actionReceiptCreationConfig shouldBe ("TODO")
        }

        // to test the property `burntGasReward` - Fraction of the burnt gas to reward to the contract account for execution.
        should("test burntGasReward") {
            // uncomment below to test the property
            //modelInstance.burntGasReward shouldBe ("TODO")
        }

        // to test the property `dataReceiptCreationConfig` - Describes the cost of creating a data receipt, `DataReceipt`.
        should("test dataReceiptCreationConfig") {
            // uncomment below to test the property
            //modelInstance.dataReceiptCreationConfig shouldBe ("TODO")
        }

        // to test the property `pessimisticGasPriceInflationRatio` - Pessimistic gas price inflation ratio.
        should("test pessimisticGasPriceInflationRatio") {
            // uncomment below to test the property
            //modelInstance.pessimisticGasPriceInflationRatio shouldBe ("TODO")
        }

        // to test the property `storageUsageConfig` - Describes fees for storage.
        should("test storageUsageConfig") {
            // uncomment below to test the property
            //modelInstance.storageUsageConfig shouldBe ("TODO")
        }

    }
}
