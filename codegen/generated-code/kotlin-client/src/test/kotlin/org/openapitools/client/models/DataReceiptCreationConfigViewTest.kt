/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.DataReceiptCreationConfigView
import org.openapitools.client.models.Fee

class DataReceiptCreationConfigViewTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of DataReceiptCreationConfigView
        //val modelInstance = DataReceiptCreationConfigView()

        // to test the property `baseCost` - Base cost of creating a data receipt. Both `send` and `exec` costs are burned when a new receipt has input dependencies. The gas is charged for each input dependency. The dependencies are specified when a receipt is created using `promise_then` and `promise_batch_then`. NOTE: Any receipt with output dependencies will produce data receipts. Even if it fails. Even if the last action is not a function call (in case of success it will return empty value).
        should("test baseCost") {
            // uncomment below to test the property
            //modelInstance.baseCost shouldBe ("TODO")
        }

        // to test the property `costPerByte` - Additional cost per byte sent. Both `send` and `exec` costs are burned when a function call finishes execution and returns `N` bytes of data to every output dependency. For each output dependency the cost is `(send(sir) + exec()) * N`.
        should("test costPerByte") {
            // uncomment below to test the property
            //modelInstance.costPerByte shouldBe ("TODO")
        }

    }
}
