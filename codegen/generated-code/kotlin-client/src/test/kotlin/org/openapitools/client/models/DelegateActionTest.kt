/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.DelegateAction
import org.openapitools.client.models.NonDelegateAction

class DelegateActionTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of DelegateAction
        //val modelInstance = DelegateAction()

        // to test the property `actions` - List of actions to be executed.  With the meta transactions MVP defined in NEP-366, nested DelegateActions are not allowed. A separate type is used to enforce it.
        should("test actions") {
            // uncomment below to test the property
            //modelInstance.actions shouldBe ("TODO")
        }

        // to test the property `maxBlockHeight` - The maximal height of the block in the blockchain below which the given DelegateAction is valid.
        should("test maxBlockHeight") {
            // uncomment below to test the property
            //modelInstance.maxBlockHeight shouldBe ("TODO")
        }

        // to test the property `nonce` - Nonce to ensure that the same delegate action is not sent twice by a relayer and should match for given account's `public_key`. After this action is processed it will increment.
        should("test nonce") {
            // uncomment below to test the property
            //modelInstance.nonce shouldBe ("TODO")
        }

        // to test the property `publicKey` - Public key used to sign this delegated action.
        should("test publicKey") {
            // uncomment below to test the property
            //modelInstance.publicKey shouldBe ("TODO")
        }

        // to test the property `receiverId` - Receiver of the delegated actions.
        should("test receiverId") {
            // uncomment below to test the property
            //modelInstance.receiverId shouldBe ("TODO")
        }

        // to test the property `senderId` - Signer of the delegated actions
        should("test senderId") {
            // uncomment below to test the property
            //modelInstance.senderId shouldBe ("TODO")
        }

    }
}
