/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.ExternalStorageConfig
import org.openapitools.client.models.ExternalStorageLocation

class ExternalStorageConfigTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ExternalStorageConfig
        //val modelInstance = ExternalStorageConfig()

        // to test the property `location` - Location of state parts.
        should("test location") {
            // uncomment below to test the property
            //modelInstance.location shouldBe ("TODO")
        }

        // to test the property `externalStorageFallbackThreshold` - The number of attempts the node will make to obtain a part from peers in the network before it fetches from external storage.
        should("test externalStorageFallbackThreshold") {
            // uncomment below to test the property
            //modelInstance.externalStorageFallbackThreshold shouldBe ("TODO")
        }

        // to test the property `numConcurrentRequests` - When fetching state parts from external storage, throttle fetch requests to this many concurrent requests.
        should("test numConcurrentRequests") {
            // uncomment below to test the property
            //modelInstance.numConcurrentRequests shouldBe ("TODO")
        }

        // to test the property `numConcurrentRequestsDuringCatchup` - During catchup, the node will use a different number of concurrent requests to reduce the performance impact of state sync.
        should("test numConcurrentRequestsDuringCatchup") {
            // uncomment below to test the property
            //modelInstance.numConcurrentRequestsDuringCatchup shouldBe ("TODO")
        }

    }
}
