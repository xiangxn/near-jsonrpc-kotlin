/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.FunctionCallPermission

class FunctionCallPermissionTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of FunctionCallPermission
        //val modelInstance = FunctionCallPermission()

        // to test the property `methodNames` - A list of method names that can be used. The access key only allows transactions with the function call of one of the given method names. Empty list means any method name can be used.
        should("test methodNames") {
            // uncomment below to test the property
            //modelInstance.methodNames shouldBe ("TODO")
        }

        // to test the property `receiverId` - The access key only allows transactions with the given receiver's account id.
        should("test receiverId") {
            // uncomment below to test the property
            //modelInstance.receiverId shouldBe ("TODO")
        }

        // to test the property `allowance` - Allowance is a balance limit to use by this access key to pay for function call gas and transaction fees. When this access key is used, both account balance and the allowance is decreased by the same value. `None` means unlimited allowance. NOTE: To change or increase the allowance, the old access key needs to be deleted and a new access key should be created.
        should("test allowance") {
            // uncomment below to test the property
            //modelInstance.allowance shouldBe ("TODO")
        }

    }
}
