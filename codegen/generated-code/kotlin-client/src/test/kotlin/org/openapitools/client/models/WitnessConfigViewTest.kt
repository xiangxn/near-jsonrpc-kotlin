/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.WitnessConfigView

class WitnessConfigViewTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of WitnessConfigView
        //val modelInstance = WitnessConfigView()

        // to test the property `combinedTransactionsSizeLimit` - Maximum size of transactions contained inside ChunkStateWitness.  A witness contains transactions from both the previous chunk and the current one. This parameter limits the sum of sizes of transactions from both of those chunks.
        should("test combinedTransactionsSizeLimit") {
            // uncomment below to test the property
            //modelInstance.combinedTransactionsSizeLimit shouldBe ("TODO")
        }

        // to test the property `mainStorageProofSizeSoftLimit` - Size limit for storage proof generated while executing receipts in a chunk. After this limit is reached we defer execution of any new receipts.
        should("test mainStorageProofSizeSoftLimit") {
            // uncomment below to test the property
            //modelInstance.mainStorageProofSizeSoftLimit shouldBe ("TODO")
        }

        // to test the property `newTransactionsValidationStateSizeSoftLimit` - Soft size limit of storage proof used to validate new transactions in ChunkStateWitness.
        should("test newTransactionsValidationStateSizeSoftLimit") {
            // uncomment below to test the property
            //modelInstance.newTransactionsValidationStateSizeSoftLimit shouldBe ("TODO")
        }

    }
}
