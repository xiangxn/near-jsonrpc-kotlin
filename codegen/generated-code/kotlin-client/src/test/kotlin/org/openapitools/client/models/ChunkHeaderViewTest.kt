/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.ChunkHeaderView
import org.openapitools.client.models.BandwidthRequests
import org.openapitools.client.models.CongestionInfoView
import org.openapitools.client.models.ValidatorStakeView

class ChunkHeaderViewTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ChunkHeaderView
        //val modelInstance = ChunkHeaderView()

        // to test the property `balanceBurnt`
        should("test balanceBurnt") {
            // uncomment below to test the property
            //modelInstance.balanceBurnt shouldBe ("TODO")
        }

        // to test the property `chunkHash`
        should("test chunkHash") {
            // uncomment below to test the property
            //modelInstance.chunkHash shouldBe ("TODO")
        }

        // to test the property `encodedLength`
        should("test encodedLength") {
            // uncomment below to test the property
            //modelInstance.encodedLength shouldBe ("TODO")
        }

        // to test the property `encodedMerkleRoot`
        should("test encodedMerkleRoot") {
            // uncomment below to test the property
            //modelInstance.encodedMerkleRoot shouldBe ("TODO")
        }

        // to test the property `gasLimit`
        should("test gasLimit") {
            // uncomment below to test the property
            //modelInstance.gasLimit shouldBe ("TODO")
        }

        // to test the property `gasUsed`
        should("test gasUsed") {
            // uncomment below to test the property
            //modelInstance.gasUsed shouldBe ("TODO")
        }

        // to test the property `heightCreated`
        should("test heightCreated") {
            // uncomment below to test the property
            //modelInstance.heightCreated shouldBe ("TODO")
        }

        // to test the property `heightIncluded`
        should("test heightIncluded") {
            // uncomment below to test the property
            //modelInstance.heightIncluded shouldBe ("TODO")
        }

        // to test the property `outcomeRoot`
        should("test outcomeRoot") {
            // uncomment below to test the property
            //modelInstance.outcomeRoot shouldBe ("TODO")
        }

        // to test the property `outgoingReceiptsRoot`
        should("test outgoingReceiptsRoot") {
            // uncomment below to test the property
            //modelInstance.outgoingReceiptsRoot shouldBe ("TODO")
        }

        // to test the property `prevBlockHash`
        should("test prevBlockHash") {
            // uncomment below to test the property
            //modelInstance.prevBlockHash shouldBe ("TODO")
        }

        // to test the property `prevStateRoot`
        should("test prevStateRoot") {
            // uncomment below to test the property
            //modelInstance.prevStateRoot shouldBe ("TODO")
        }

        // to test the property `rentPaid` - TODO(2271): deprecated.
        should("test rentPaid") {
            // uncomment below to test the property
            //modelInstance.rentPaid shouldBe ("TODO")
        }

        // to test the property `shardId` - The shard identifier. It may be an arbitrary number - it does not need to be a number in the range 0..NUM_SHARDS. The shard ids do not need to be sequential or contiguous.  The shard id is wrapped in a new type to prevent the old pattern of using indices in range 0..NUM_SHARDS and casting to ShardId. Once the transition if fully complete it potentially may be simplified to a regular type alias.
        should("test shardId") {
            // uncomment below to test the property
            //modelInstance.shardId shouldBe ("TODO")
        }

        // to test the property `signature`
        should("test signature") {
            // uncomment below to test the property
            //modelInstance.signature shouldBe ("TODO")
        }

        // to test the property `txRoot`
        should("test txRoot") {
            // uncomment below to test the property
            //modelInstance.txRoot shouldBe ("TODO")
        }

        // to test the property `validatorProposals`
        should("test validatorProposals") {
            // uncomment below to test the property
            //modelInstance.validatorProposals shouldBe ("TODO")
        }

        // to test the property `validatorReward` - TODO(2271): deprecated.
        should("test validatorReward") {
            // uncomment below to test the property
            //modelInstance.validatorReward shouldBe ("TODO")
        }

        // to test the property `bandwidthRequests`
        should("test bandwidthRequests") {
            // uncomment below to test the property
            //modelInstance.bandwidthRequests shouldBe ("TODO")
        }

        // to test the property `congestionInfo`
        should("test congestionInfo") {
            // uncomment below to test the property
            //modelInstance.congestionInfo shouldBe ("TODO")
        }

    }
}
