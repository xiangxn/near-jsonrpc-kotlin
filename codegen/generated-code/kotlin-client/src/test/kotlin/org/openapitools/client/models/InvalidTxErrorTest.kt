/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.InvalidTxError
import org.openapitools.client.models.ActionsValidationError
import org.openapitools.client.models.ActionsValidationErrorOneOf5ContractSizeExceeded
import org.openapitools.client.models.InvalidAccessKeyError
import org.openapitools.client.models.InvalidTxErrorOneOf
import org.openapitools.client.models.InvalidTxErrorOneOf1
import org.openapitools.client.models.InvalidTxErrorOneOf10
import org.openapitools.client.models.InvalidTxErrorOneOf11
import org.openapitools.client.models.InvalidTxErrorOneOf11ShardCongested
import org.openapitools.client.models.InvalidTxErrorOneOf12
import org.openapitools.client.models.InvalidTxErrorOneOf12ShardStuck
import org.openapitools.client.models.InvalidTxErrorOneOf1InvalidSignerId
import org.openapitools.client.models.InvalidTxErrorOneOf2
import org.openapitools.client.models.InvalidTxErrorOneOf2SignerDoesNotExist
import org.openapitools.client.models.InvalidTxErrorOneOf3
import org.openapitools.client.models.InvalidTxErrorOneOf3InvalidNonce
import org.openapitools.client.models.InvalidTxErrorOneOf4
import org.openapitools.client.models.InvalidTxErrorOneOf4NonceTooLarge
import org.openapitools.client.models.InvalidTxErrorOneOf5
import org.openapitools.client.models.InvalidTxErrorOneOf5InvalidReceiverId
import org.openapitools.client.models.InvalidTxErrorOneOf6
import org.openapitools.client.models.InvalidTxErrorOneOf6NotEnoughBalance
import org.openapitools.client.models.InvalidTxErrorOneOf7
import org.openapitools.client.models.InvalidTxErrorOneOf7LackBalanceForState
import org.openapitools.client.models.InvalidTxErrorOneOf8
import org.openapitools.client.models.InvalidTxErrorOneOf9
import org.openapitools.client.models.StorageError

class InvalidTxErrorTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of InvalidTxError
        //val modelInstance = InvalidTxError()

        // to test the property `invalidAccessKeyError`
        should("test invalidAccessKeyError") {
            // uncomment below to test the property
            //modelInstance.invalidAccessKeyError shouldBe ("TODO")
        }

        // to test the property `invalidSignerId`
        should("test invalidSignerId") {
            // uncomment below to test the property
            //modelInstance.invalidSignerId shouldBe ("TODO")
        }

        // to test the property `signerDoesNotExist`
        should("test signerDoesNotExist") {
            // uncomment below to test the property
            //modelInstance.signerDoesNotExist shouldBe ("TODO")
        }

        // to test the property `invalidNonce`
        should("test invalidNonce") {
            // uncomment below to test the property
            //modelInstance.invalidNonce shouldBe ("TODO")
        }

        // to test the property `nonceTooLarge`
        should("test nonceTooLarge") {
            // uncomment below to test the property
            //modelInstance.nonceTooLarge shouldBe ("TODO")
        }

        // to test the property `invalidReceiverId`
        should("test invalidReceiverId") {
            // uncomment below to test the property
            //modelInstance.invalidReceiverId shouldBe ("TODO")
        }

        // to test the property `notEnoughBalance`
        should("test notEnoughBalance") {
            // uncomment below to test the property
            //modelInstance.notEnoughBalance shouldBe ("TODO")
        }

        // to test the property `lackBalanceForState`
        should("test lackBalanceForState") {
            // uncomment below to test the property
            //modelInstance.lackBalanceForState shouldBe ("TODO")
        }

        // to test the property `actionsValidation`
        should("test actionsValidation") {
            // uncomment below to test the property
            //modelInstance.actionsValidation shouldBe ("TODO")
        }

        // to test the property `transactionSizeExceeded`
        should("test transactionSizeExceeded") {
            // uncomment below to test the property
            //modelInstance.transactionSizeExceeded shouldBe ("TODO")
        }

        // to test the property `storageError`
        should("test storageError") {
            // uncomment below to test the property
            //modelInstance.storageError shouldBe ("TODO")
        }

        // to test the property `shardCongested`
        should("test shardCongested") {
            // uncomment below to test the property
            //modelInstance.shardCongested shouldBe ("TODO")
        }

        // to test the property `shardStuck`
        should("test shardStuck") {
            // uncomment below to test the property
            //modelInstance.shardStuck shouldBe ("TODO")
        }

    }
}
