/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.RuntimeConfigView
import org.openapitools.client.models.AccountCreationConfigView
import org.openapitools.client.models.CongestionControlConfigView
import org.openapitools.client.models.RuntimeFeesConfigView
import org.openapitools.client.models.VMConfigView
import org.openapitools.client.models.WitnessConfigView

class RuntimeConfigViewTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of RuntimeConfigView
        //val modelInstance = RuntimeConfigView()

        // to test the property `accountCreationConfig` - Config that defines rules for account creation.
        should("test accountCreationConfig") {
            // uncomment below to test the property
            //modelInstance.accountCreationConfig shouldBe ("TODO")
        }

        // to test the property `congestionControlConfig` - The configuration for congestion control.
        should("test congestionControlConfig") {
            // uncomment below to test the property
            //modelInstance.congestionControlConfig shouldBe ("TODO")
        }

        // to test the property `storageAmountPerByte` - Amount of yN per byte required to have on the account.  See <https://nomicon.io/Economics/Economic#state-stake> for details.
        should("test storageAmountPerByte") {
            // uncomment below to test the property
            //modelInstance.storageAmountPerByte shouldBe ("TODO")
        }

        // to test the property `transactionCosts` - Costs of different actions that need to be performed when sending and processing transaction and receipts.
        should("test transactionCosts") {
            // uncomment below to test the property
            //modelInstance.transactionCosts shouldBe ("TODO")
        }

        // to test the property `wasmConfig` - Config of wasm operations.
        should("test wasmConfig") {
            // uncomment below to test the property
            //modelInstance.wasmConfig shouldBe ("TODO")
        }

        // to test the property `witnessConfig` - Configuration specific to ChunkStateWitness.
        should("test witnessConfig") {
            // uncomment below to test the property
            //modelInstance.witnessConfig shouldBe ("TODO")
        }

    }
}
