/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.Fee

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * The fees settings for a data receipt creation
 *
 * @param baseCost Base cost of creating a data receipt. Both `send` and `exec` costs are burned when a new receipt has input dependencies. The gas is charged for each input dependency. The dependencies are specified when a receipt is created using `promise_then` and `promise_batch_then`. NOTE: Any receipt with output dependencies will produce data receipts. Even if it fails. Even if the last action is not a function call (in case of success it will return empty value).
 * @param costPerByte Additional cost per byte sent. Both `send` and `exec` costs are burned when a function call finishes execution and returns `N` bytes of data to every output dependency. For each output dependency the cost is `(send(sir) + exec()) * N`.
 */


data class DataReceiptCreationConfigView (

    /* Base cost of creating a data receipt. Both `send` and `exec` costs are burned when a new receipt has input dependencies. The gas is charged for each input dependency. The dependencies are specified when a receipt is created using `promise_then` and `promise_batch_then`. NOTE: Any receipt with output dependencies will produce data receipts. Even if it fails. Even if the last action is not a function call (in case of success it will return empty value). */
    @Json(name = "base_cost")
    val baseCost: Fee,

    /* Additional cost per byte sent. Both `send` and `exec` costs are burned when a function call finishes execution and returns `N` bytes of data to every output dependency. For each output dependency the cost is `(send(sir) + exec()) * N`. */
    @Json(name = "cost_per_byte")
    val costPerByte: Fee

) {


}

