/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.ExtCostsConfigView
import org.openapitools.client.models.LimitConfig
import org.openapitools.client.models.StorageGetMode
import org.openapitools.client.models.VMKind

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param deterministicAccountIds See [VMConfig::deterministic_account_ids](crate::vm::Config::deterministic_account_ids).
 * @param discardCustomSections See [VMConfig::discard_custom_sections](crate::vm::Config::discard_custom_sections).
 * @param ethImplicitAccounts See [VMConfig::eth_implicit_accounts](crate::vm::Config::eth_implicit_accounts).
 * @param extCosts Costs for runtime externals
 * @param fixContractLoadingCost See [VMConfig::fix_contract_loading_cost](crate::vm::Config::fix_contract_loading_cost).
 * @param globalContractHostFns See [VMConfig::global_contract_host_fns](crate::vm::Config::global_contract_host_fns).
 * @param growMemCost Gas cost of a growing memory by single page.
 * @param implicitAccountCreation See [VMConfig::implicit_account_creation](crate::vm::Config::implicit_account_creation).
 * @param limitConfig Describes limits for VM and Runtime.  TODO: Consider changing this to `VMLimitConfigView` to avoid dependency on runtime.
 * @param reftypesBulkMemory See [VMConfig::reftypes_bulk_memory](crate::vm::Config::reftypes_bulk_memory).
 * @param regularOpCost Gas cost of a regular operation.
 * @param saturatingFloatToInt See [VMConfig::saturating_float_to_int](crate::vm::Config::saturating_float_to_int).
 * @param storageGetMode See [VMConfig::storage_get_mode](crate::vm::Config::storage_get_mode).
 * @param vmKind See [VMConfig::vm_kind](crate::vm::Config::vm_kind).
 */


data class VMConfigView (

    /* See [VMConfig::deterministic_account_ids](crate::vm::Config::deterministic_account_ids). */
    @Json(name = "deterministic_account_ids")
    val deterministicAccountIds: kotlin.Boolean,

    /* See [VMConfig::discard_custom_sections](crate::vm::Config::discard_custom_sections). */
    @Json(name = "discard_custom_sections")
    val discardCustomSections: kotlin.Boolean,

    /* See [VMConfig::eth_implicit_accounts](crate::vm::Config::eth_implicit_accounts). */
    @Json(name = "eth_implicit_accounts")
    val ethImplicitAccounts: kotlin.Boolean,

    /* Costs for runtime externals */
    @Json(name = "ext_costs")
    val extCosts: ExtCostsConfigView,

    /* See [VMConfig::fix_contract_loading_cost](crate::vm::Config::fix_contract_loading_cost). */
    @Json(name = "fix_contract_loading_cost")
    val fixContractLoadingCost: kotlin.Boolean,

    /* See [VMConfig::global_contract_host_fns](crate::vm::Config::global_contract_host_fns). */
    @Json(name = "global_contract_host_fns")
    val globalContractHostFns: kotlin.Boolean,

    /* Gas cost of a growing memory by single page. */
    @Json(name = "grow_mem_cost")
    val growMemCost: kotlin.Int,

    /* See [VMConfig::implicit_account_creation](crate::vm::Config::implicit_account_creation). */
    @Json(name = "implicit_account_creation")
    val implicitAccountCreation: kotlin.Boolean,

    /* Describes limits for VM and Runtime.  TODO: Consider changing this to `VMLimitConfigView` to avoid dependency on runtime. */
    @Json(name = "limit_config")
    val limitConfig: LimitConfig,

    /* See [VMConfig::reftypes_bulk_memory](crate::vm::Config::reftypes_bulk_memory). */
    @Json(name = "reftypes_bulk_memory")
    val reftypesBulkMemory: kotlin.Boolean,

    /* Gas cost of a regular operation. */
    @Json(name = "regular_op_cost")
    val regularOpCost: kotlin.Int,

    /* See [VMConfig::saturating_float_to_int](crate::vm::Config::saturating_float_to_int). */
    @Json(name = "saturating_float_to_int")
    val saturatingFloatToInt: kotlin.Boolean,

    /* See [VMConfig::storage_get_mode](crate::vm::Config::storage_get_mode). */
    @Json(name = "storage_get_mode")
    val storageGetMode: StorageGetMode,

    /* See [VMConfig::vm_kind](crate::vm::Config::vm_kind). */
    @Json(name = "vm_kind")
    val vmKind: VMKind

) {


}

