/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.AccountCreationConfigView
import org.openapitools.client.models.CongestionControlConfigView
import org.openapitools.client.models.RuntimeFeesConfigView
import org.openapitools.client.models.VMConfigView
import org.openapitools.client.models.WitnessConfigView

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * View that preserves JSON format of the runtime config.
 *
 * @param accountCreationConfig Config that defines rules for account creation.
 * @param congestionControlConfig The configuration for congestion control.
 * @param storageAmountPerByte Amount of yN per byte required to have on the account.  See <https://nomicon.io/Economics/Economic#state-stake> for details.
 * @param transactionCosts Costs of different actions that need to be performed when sending and processing transaction and receipts.
 * @param wasmConfig Config of wasm operations.
 * @param witnessConfig Configuration specific to ChunkStateWitness.
 */


data class RuntimeConfigView (

    /* Config that defines rules for account creation. */
    @Json(name = "account_creation_config")
    val accountCreationConfig: AccountCreationConfigView,

    /* The configuration for congestion control. */
    @Json(name = "congestion_control_config")
    val congestionControlConfig: CongestionControlConfigView,

    /* Amount of yN per byte required to have on the account.  See <https://nomicon.io/Economics/Economic#state-stake> for details. */
    @Json(name = "storage_amount_per_byte")
    val storageAmountPerByte: kotlin.String,

    /* Costs of different actions that need to be performed when sending and processing transaction and receipts. */
    @Json(name = "transaction_costs")
    val transactionCosts: RuntimeFeesConfigView,

    /* Config of wasm operations. */
    @Json(name = "wasm_config")
    val wasmConfig: VMConfigView,

    /* Configuration specific to ChunkStateWitness. */
    @Json(name = "witness_config")
    val witnessConfig: WitnessConfigView

) {


}

