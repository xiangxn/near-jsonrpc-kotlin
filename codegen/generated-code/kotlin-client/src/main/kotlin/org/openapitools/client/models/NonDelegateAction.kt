/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.AddKeyAction
import org.openapitools.client.models.DeleteAccountAction
import org.openapitools.client.models.DeleteKeyAction
import org.openapitools.client.models.DeployContractAction
import org.openapitools.client.models.DeployGlobalContractAction
import org.openapitools.client.models.FunctionCallAction
import org.openapitools.client.models.NonDelegateActionOneOf
import org.openapitools.client.models.NonDelegateActionOneOf1
import org.openapitools.client.models.NonDelegateActionOneOf2
import org.openapitools.client.models.NonDelegateActionOneOf3
import org.openapitools.client.models.NonDelegateActionOneOf4
import org.openapitools.client.models.NonDelegateActionOneOf5
import org.openapitools.client.models.NonDelegateActionOneOf6
import org.openapitools.client.models.NonDelegateActionOneOf7
import org.openapitools.client.models.NonDelegateActionOneOf8
import org.openapitools.client.models.NonDelegateActionOneOf9
import org.openapitools.client.models.StakeAction
import org.openapitools.client.models.TransferAction
import org.openapitools.client.models.UseGlobalContractAction

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * An Action that can be included in a transaction or receipt, excluding delegate actions. This type represents all possible action types except DelegateAction to prevent infinite recursion in meta-transactions.
 *
 * @param createAccount Create account action
 * @param deployContract 
 * @param functionCall 
 * @param transfer 
 * @param stake 
 * @param addKey 
 * @param deleteKey 
 * @param deleteAccount 
 * @param deployGlobalContract 
 * @param useGlobalContract 
 */


data class NonDelegateAction (

    /* Create account action */
    @Json(name = "CreateAccount")
    val createAccount: kotlin.Any,

    @Json(name = "DeployContract")
    val deployContract: DeployContractAction,

    @Json(name = "FunctionCall")
    val functionCall: FunctionCallAction,

    @Json(name = "Transfer")
    val transfer: TransferAction,

    @Json(name = "Stake")
    val stake: StakeAction,

    @Json(name = "AddKey")
    val addKey: AddKeyAction,

    @Json(name = "DeleteKey")
    val deleteKey: DeleteKeyAction,

    @Json(name = "DeleteAccount")
    val deleteAccount: DeleteAccountAction,

    @Json(name = "DeployGlobalContract")
    val deployGlobalContract: DeployGlobalContractAction,

    @Json(name = "UseGlobalContract")
    val useGlobalContract: UseGlobalContractAction

) {


}

