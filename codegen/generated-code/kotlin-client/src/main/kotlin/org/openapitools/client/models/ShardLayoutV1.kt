/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param boundaryAccounts The boundary accounts are the accounts on boundaries between shards. Each shard contains a range of accounts from one boundary account to another - or the smallest or largest account possible. The total number of shards is equal to the number of boundary accounts plus 1.
 * @param version Version of the shard layout, this is useful for uniquely identify the shard layout
 * @param shardsSplitMap Maps shards from the last shard layout to shards that it splits to in this shard layout, Useful for constructing states for the shards. None for the genesis shard layout
 * @param toParentShardMap Maps shard in this shard layout to their parent shard Since shard_ids always range from 0 to num_shards - 1, we use vec instead of a hashmap
 */


data class ShardLayoutV1 (

    /* The boundary accounts are the accounts on boundaries between shards. Each shard contains a range of accounts from one boundary account to another - or the smallest or largest account possible. The total number of shards is equal to the number of boundary accounts plus 1. */
    @Json(name = "boundary_accounts")
    val boundaryAccounts: kotlin.collections.List<kotlin.String>,

    /* Version of the shard layout, this is useful for uniquely identify the shard layout */
    @Json(name = "version")
    val version: kotlin.Int,

    /* Maps shards from the last shard layout to shards that it splits to in this shard layout, Useful for constructing states for the shards. None for the genesis shard layout */
    @Json(name = "shards_split_map")
    val shardsSplitMap: kotlin.collections.List<kotlin.collections.List<kotlin.Int>>? = null,

    /* Maps shard in this shard layout to their parent shard Since shard_ids always range from 0 to num_shards - 1, we use vec instead of a hashmap */
    @Json(name = "to_parent_shard_map")
    val toParentShardMap: kotlin.collections.List<kotlin.Int>? = null

) {


}

