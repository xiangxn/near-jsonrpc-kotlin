/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.AccessKeyCreationConfigView
import org.openapitools.client.models.Fee

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Describes the cost of creating a specific action, `Action`. Includes all variants.
 *
 * @param addKeyCost Base cost of adding a key.
 * @param createAccountCost Base cost of creating an account.
 * @param delegateCost Base cost for processing a delegate action.  This is on top of the costs for the actions inside the delegate action.
 * @param deleteAccountCost Base cost of deleting an account.
 * @param deleteKeyCost Base cost of deleting a key.
 * @param deployContractCost Base cost of deploying a contract.
 * @param deployContractCostPerByte Cost per byte of deploying a contract.
 * @param functionCallCost Base cost of calling a function.
 * @param functionCallCostPerByte Cost per byte of method name and arguments of calling a function.
 * @param stakeCost Base cost of staking.
 * @param transferCost Base cost of making a transfer.
 */


data class ActionCreationConfigView (

    /* Base cost of adding a key. */
    @Json(name = "add_key_cost")
    val addKeyCost: AccessKeyCreationConfigView,

    /* Base cost of creating an account. */
    @Json(name = "create_account_cost")
    val createAccountCost: Fee,

    /* Base cost for processing a delegate action.  This is on top of the costs for the actions inside the delegate action. */
    @Json(name = "delegate_cost")
    val delegateCost: Fee,

    /* Base cost of deleting an account. */
    @Json(name = "delete_account_cost")
    val deleteAccountCost: Fee,

    /* Base cost of deleting a key. */
    @Json(name = "delete_key_cost")
    val deleteKeyCost: Fee,

    /* Base cost of deploying a contract. */
    @Json(name = "deploy_contract_cost")
    val deployContractCost: Fee,

    /* Cost per byte of deploying a contract. */
    @Json(name = "deploy_contract_cost_per_byte")
    val deployContractCostPerByte: Fee,

    /* Base cost of calling a function. */
    @Json(name = "function_call_cost")
    val functionCallCost: Fee,

    /* Cost per byte of method name and arguments of calling a function. */
    @Json(name = "function_call_cost_per_byte")
    val functionCallCostPerByte: Fee,

    /* Base cost of staking. */
    @Json(name = "stake_cost")
    val stakeCost: Fee,

    /* Base cost of making a transfer. */
    @Json(name = "transfer_cost")
    val transferCost: Fee

) {


}

