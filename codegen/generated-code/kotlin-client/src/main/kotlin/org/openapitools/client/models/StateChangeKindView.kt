/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.StateChangeKindViewOneOf
import org.openapitools.client.models.StateChangeKindViewOneOf1
import org.openapitools.client.models.StateChangeKindViewOneOf2
import org.openapitools.client.models.StateChangeKindViewOneOf3

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * It is a [serializable view] of [`StateChangeKind`].  [serializable view]: ./index.html [`StateChangeKind`]: ../types/struct.StateChangeKind.html
 *
 * @param accountId NEAR Account Identifier.  This is a unique, syntactically valid, human-readable account identifier on the NEAR network.  [See the crate-level docs for information about validation.](index.html#account-id-rules)  Also see [Error kind precedence](AccountId#error-kind-precedence).  ## Examples  ``` use near_account_id::AccountId;  let alice: AccountId = \"alice.near\".parse().unwrap();  assert!(\"ƒelicia.near\".parse::<AccountId>().is_err()); // (ƒ is not f) ```
 * @param type 
 */


data class StateChangeKindView (

    /* NEAR Account Identifier.  This is a unique, syntactically valid, human-readable account identifier on the NEAR network.  [See the crate-level docs for information about validation.](index.html#account-id-rules)  Also see [Error kind precedence](AccountId#error-kind-precedence).  ## Examples  ``` use near_account_id::AccountId;  let alice: AccountId = \"alice.near\".parse().unwrap();  assert!(\"ƒelicia.near\".parse::<AccountId>().is_err()); // (ƒ is not f) ``` */
    @Json(name = "account_id")
    val accountId: kotlin.String,

    @Json(name = "type")
    val type: StateChangeKindView.Type

) {

    /**
     * 
     *
     * Values: account_touched,access_key_touched,data_touched,contract_code_touched
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "account_touched") account_touched("account_touched"),
        @Json(name = "access_key_touched") access_key_touched("access_key_touched"),
        @Json(name = "data_touched") data_touched("data_touched"),
        @Json(name = "contract_code_touched") contract_code_touched("contract_code_touched");
    }

}

