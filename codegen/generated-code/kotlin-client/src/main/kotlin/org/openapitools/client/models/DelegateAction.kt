/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.NonDelegateAction

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * This action allows to execute the inner actions behalf of the defined sender.
 *
 * @param actions List of actions to be executed.  With the meta transactions MVP defined in NEP-366, nested DelegateActions are not allowed. A separate type is used to enforce it.
 * @param maxBlockHeight The maximal height of the block in the blockchain below which the given DelegateAction is valid.
 * @param nonce Nonce to ensure that the same delegate action is not sent twice by a relayer and should match for given account's `public_key`. After this action is processed it will increment.
 * @param publicKey Public key used to sign this delegated action.
 * @param receiverId Receiver of the delegated actions.
 * @param senderId Signer of the delegated actions
 */


data class DelegateAction (

    /* List of actions to be executed.  With the meta transactions MVP defined in NEP-366, nested DelegateActions are not allowed. A separate type is used to enforce it. */
    @Json(name = "actions")
    val actions: kotlin.collections.List<NonDelegateAction>,

    /* The maximal height of the block in the blockchain below which the given DelegateAction is valid. */
    @Json(name = "max_block_height")
    val maxBlockHeight: kotlin.Int,

    /* Nonce to ensure that the same delegate action is not sent twice by a relayer and should match for given account's `public_key`. After this action is processed it will increment. */
    @Json(name = "nonce")
    val nonce: kotlin.Int,

    /* Public key used to sign this delegated action. */
    @Json(name = "public_key")
    val publicKey: kotlin.String,

    /* Receiver of the delegated actions. */
    @Json(name = "receiver_id")
    val receiverId: kotlin.String,

    /* Signer of the delegated actions */
    @Json(name = "sender_id")
    val senderId: kotlin.String

) {


}

