/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param addr 
 * @param archival 
 * @param connectionEstablishedTimeMillis 
 * @param isHighestBlockInvalid 
 * @param isOutboundPeer 
 * @param lastTimePeerRequestedMillis 
 * @param lastTimeReceivedMessageMillis 
 * @param nonce Connection nonce.
 * @param peerId 
 * @param receivedBytesPerSec 
 * @param sentBytesPerSec 
 * @param trackedShards 
 * @param accountId NEAR Account Identifier.  This is a unique, syntactically valid, human-readable account identifier on the NEAR network.  [See the crate-level docs for information about validation.](index.html#account-id-rules)  Also see [Error kind precedence](AccountId#error-kind-precedence).  ## Examples  ``` use near_account_id::AccountId;  let alice: AccountId = \"alice.near\".parse().unwrap();  assert!(\"ƒelicia.near\".parse::<AccountId>().is_err()); // (ƒ is not f) ```
 * @param blockHash 
 * @param height 
 */


data class PeerInfoView (

    @Json(name = "addr")
    val addr: kotlin.String,

    @Json(name = "archival")
    val archival: kotlin.Boolean,

    @Json(name = "connection_established_time_millis")
    val connectionEstablishedTimeMillis: kotlin.Int,

    @Json(name = "is_highest_block_invalid")
    val isHighestBlockInvalid: kotlin.Boolean,

    @Json(name = "is_outbound_peer")
    val isOutboundPeer: kotlin.Boolean,

    @Json(name = "last_time_peer_requested_millis")
    val lastTimePeerRequestedMillis: kotlin.Int,

    @Json(name = "last_time_received_message_millis")
    val lastTimeReceivedMessageMillis: kotlin.Int,

    /* Connection nonce. */
    @Json(name = "nonce")
    val nonce: kotlin.Int,

    @Json(name = "peer_id")
    val peerId: kotlin.String,

    @Json(name = "received_bytes_per_sec")
    val receivedBytesPerSec: kotlin.Int,

    @Json(name = "sent_bytes_per_sec")
    val sentBytesPerSec: kotlin.Int,

    @Json(name = "tracked_shards")
    val trackedShards: kotlin.collections.List<kotlin.Int>,

    /* NEAR Account Identifier.  This is a unique, syntactically valid, human-readable account identifier on the NEAR network.  [See the crate-level docs for information about validation.](index.html#account-id-rules)  Also see [Error kind precedence](AccountId#error-kind-precedence).  ## Examples  ``` use near_account_id::AccountId;  let alice: AccountId = \"alice.near\".parse().unwrap();  assert!(\"ƒelicia.near\".parse::<AccountId>().is_err()); // (ƒ is not f) ``` */
    @Json(name = "account_id")
    val accountId: kotlin.String? = null,

    @Json(name = "block_hash")
    val blockHash: kotlin.String? = null,

    @Json(name = "height")
    val height: kotlin.Int? = null

) {


}

