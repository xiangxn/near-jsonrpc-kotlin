/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.ActionCreationConfigView
import org.openapitools.client.models.DataReceiptCreationConfigView
import org.openapitools.client.models.Fee
import org.openapitools.client.models.StorageUsageConfigView

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Describes different fees for the runtime
 *
 * @param actionCreationConfig Describes the cost of creating a certain action, `Action`. Includes all variants.
 * @param actionReceiptCreationConfig Describes the cost of creating an action receipt, `ActionReceipt`, excluding the actual cost of actions. - `send` cost is burned when a receipt is created using `promise_create` or     `promise_batch_create` - `exec` cost is burned when the receipt is being executed.
 * @param burntGasReward Fraction of the burnt gas to reward to the contract account for execution.
 * @param dataReceiptCreationConfig Describes the cost of creating a data receipt, `DataReceipt`.
 * @param pessimisticGasPriceInflationRatio Pessimistic gas price inflation ratio.
 * @param storageUsageConfig Describes fees for storage.
 */


data class RuntimeFeesConfigView (

    /* Describes the cost of creating a certain action, `Action`. Includes all variants. */
    @Json(name = "action_creation_config")
    val actionCreationConfig: ActionCreationConfigView,

    /* Describes the cost of creating an action receipt, `ActionReceipt`, excluding the actual cost of actions. - `send` cost is burned when a receipt is created using `promise_create` or     `promise_batch_create` - `exec` cost is burned when the receipt is being executed. */
    @Json(name = "action_receipt_creation_config")
    val actionReceiptCreationConfig: Fee,

    /* Fraction of the burnt gas to reward to the contract account for execution. */
    @Json(name = "burnt_gas_reward")
    val burntGasReward: kotlin.collections.List<kotlin.Int>,

    /* Describes the cost of creating a data receipt, `DataReceipt`. */
    @Json(name = "data_receipt_creation_config")
    val dataReceiptCreationConfig: DataReceiptCreationConfigView,

    /* Pessimistic gas price inflation ratio. */
    @Json(name = "pessimistic_gas_price_inflation_ratio")
    val pessimisticGasPriceInflationRatio: kotlin.collections.List<kotlin.Int>,

    /* Describes fees for storage. */
    @Json(name = "storage_usage_config")
    val storageUsageConfig: StorageUsageConfigView

) {


}

