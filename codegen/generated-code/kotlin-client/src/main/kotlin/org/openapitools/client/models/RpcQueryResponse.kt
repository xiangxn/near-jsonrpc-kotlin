/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.AccessKeyInfoView
import org.openapitools.client.models.AccessKeyList
import org.openapitools.client.models.AccessKeyPermissionView
import org.openapitools.client.models.AccessKeyView
import org.openapitools.client.models.AccountView
import org.openapitools.client.models.CallResult
import org.openapitools.client.models.ContractCodeView
import org.openapitools.client.models.StateItem
import org.openapitools.client.models.ViewStateResult

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param amount 
 * @param codeHash 
 * @param locked 
 * @param storageUsage 
 * @param codeBase64 
 * @param hash 
 * @param propertyValues 
 * @param logs 
 * @param result 
 * @param nonce 
 * @param permission 
 * @param propertyKeys 
 * @param globalContractAccountId NEAR Account Identifier.  This is a unique, syntactically valid, human-readable account identifier on the NEAR network.  [See the crate-level docs for information about validation.](index.html#account-id-rules)  Also see [Error kind precedence](AccountId#error-kind-precedence).  ## Examples  ``` use near_account_id::AccountId;  let alice: AccountId = \"alice.near\".parse().unwrap();  assert!(\"ƒelicia.near\".parse::<AccountId>().is_err()); // (ƒ is not f) ```
 * @param globalContractHash 
 * @param storagePaidAt TODO(2271): deprecated.
 * @param proof 
 */


data class RpcQueryResponse (

    @Json(name = "amount")
    val amount: kotlin.String,

    @Json(name = "code_hash")
    val codeHash: kotlin.String,

    @Json(name = "locked")
    val locked: kotlin.String,

    @Json(name = "storage_usage")
    val storageUsage: kotlin.Int,

    @Json(name = "code_base64")
    val codeBase64: kotlin.String,

    @Json(name = "hash")
    val hash: kotlin.String,

    @Json(name = "values")
    val propertyValues: kotlin.collections.List<StateItem>,

    @Json(name = "logs")
    val logs: kotlin.collections.List<kotlin.String>,

    @Json(name = "result")
    val result: kotlin.collections.List<kotlin.Int>,

    @Json(name = "nonce")
    val nonce: kotlin.Int,

    @Json(name = "permission")
    val permission: AccessKeyPermissionView,

    @Json(name = "keys")
    val propertyKeys: kotlin.collections.List<AccessKeyInfoView>,

    /* NEAR Account Identifier.  This is a unique, syntactically valid, human-readable account identifier on the NEAR network.  [See the crate-level docs for information about validation.](index.html#account-id-rules)  Also see [Error kind precedence](AccountId#error-kind-precedence).  ## Examples  ``` use near_account_id::AccountId;  let alice: AccountId = \"alice.near\".parse().unwrap();  assert!(\"ƒelicia.near\".parse::<AccountId>().is_err()); // (ƒ is not f) ``` */
    @Json(name = "global_contract_account_id")
    val globalContractAccountId: kotlin.String? = null,

    @Json(name = "global_contract_hash")
    val globalContractHash: kotlin.String? = null,

    /* TODO(2271): deprecated. */
    @Json(name = "storage_paid_at")
    val storagePaidAt: kotlin.Int? = 0,

    @Json(name = "proof")
    val proof: kotlin.collections.List<kotlin.String>? = null

) {


}

